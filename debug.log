
--------------------------------------------------------------------------------
-- Begin ConvertFrom-StencilTemplate
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Convert-StringToToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Get-TagStyle
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Get-TagStyle
--------------------------------------------------------------------------------
Template is 521 characters
Template contains 32 lines

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 0
Setting Start Column => 0
Setting Start Line => 0

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
No Carriage Return found
=================================== Line 000 ====================================
Current line: '<%\#\ code:\ language=eps\ \#%>'
Split line into 4 words
- Content is empty
- Lexeme is [<%#]
-- Scanning current word '<%\#' ----------------------------------------
| Counter - (0):
|- Index:     0
|- Line:      0
|- Cursor:    0
|- Column:    0
|- ---
|- Start:    Line: 0:0 - Index 0]
|- End:      Line: 0:0 - Index 0]
|- ---
|- Word index in this line: 0 of 4
|- Previous word:  []
|- Current word:   [<%#] <---
|- Next word:      [code:]
|- ---
|- State:     TEXT
|- Content:   []
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
Characters found are a Prefix
Check condition when state is TEXT
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is empty

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 0
Setting Start Column => 0
Setting Start Line => 0

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 0
After adding lexeme length : 3

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 3

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------
STATE CHANGE: TEXT -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%#]
Word index in input - (1):
- Index:     1
- Line:      0
- Cursor:    3
- Column:    3
- ---
- Word index in this line: 1
- Previous:  [<%#]
- Word:      [<%#] <---
- Next:      [code:]
- ---
- State:     OPEN
- Content:   []
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [code:]
-- Scanning current word 'code:' ----------------------------------------
| Counter - (1):
|- Index:     1
|- Line:      0
|- Cursor:    3
|- Column:    3
|- ---
|- Start:    Line: 0:0 - Index 0]
|- End:      Line: 0:0 - Index 0]
|- ---
|- Word index in this line: 1 of 4
|- Previous word:  [<%#]
|- Current word:   [code:] <---
|- Next word:      [language=eps]
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [code:]
Word index in input - (2):
- Index:     1
- Line:      0
- Cursor:    3
- Column:    3
- ---
- Word index in this line: 2
- Previous:  [code:]
- Word:      [code:] <---
- Next:      [language=eps]
- ---
- State:     ELMT
- Content:   [code:]
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ language=eps]
-- Scanning current word 'language=eps' ----------------------------------------
| Counter - (2):
|- Index:     1
|- Line:      0
|- Cursor:    3
|- Column:    3
|- ---
|- Start:    Line: 0:0 - Index 0]
|- End:      Line: 0:0 - Index 0]
|- ---
|- Word index in this line: 2 of 4
|- Previous word:  [code:]
|- Current word:   [language=eps] <---
|- Next word:      [#%>]
|- ---
|- State:     ELMT
|- Content:   [code:]
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [language=eps]
Word index in input - (3):
- Index:     1
- Line:      0
- Cursor:    3
- Column:    3
- ---
- Word index in this line: 3
- Previous:  [language=eps]
- Word:      [language=eps] <---
- Next:      [#%>]
- ---
- State:     ELMT
- Content:   [code: language=eps]
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ #%>]
-- Scanning current word '\#%>' ----------------------------------------
| Counter - (3):
|- Index:     1
|- Line:      0
|- Cursor:    3
|- Column:    3
|- ---
|- Start:    Line: 0:0 - Index 0]
|- End:      Line: 0:0 - Index 0]
|- ---
|- Word index in this line: 3 of 4
|- Previous word:  [language=eps]
|- Current word:   [#%>] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [code: language=eps]
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
- Characters found before end tag
Characters found are a Suffix
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 3
Setting End Column => 3
Setting End Line => 0

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'code: language=eps'
    Prefix = '#'
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 0
        Line = 0
        Index = 0
    }
    End = @{
        Column = 3
        Line = 0
        Index = 3
    }
    Suffix = '#'
}

TokenInfo : @{
    Content = 'code: language=eps'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 0
        Line = 0
        Index = 0
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = '#'
    Suffix = '#'
    Indent = '0'
    End = @{
        Column = 3
        Line = 0
        Index = 3
    }
    Length = 18
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 4

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 3
After adding lexeme length : 7

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 3
After adding lexeme length : 7

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 7
Setting Start Column => 7
Setting Start Line => 0

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [#%>]
Word index in input - (4):
- Index:     1
- Line:      0
- Cursor:    7
- Column:    7
- ---
- Word index in this line: 4
- Previous:  [#%>]
- Word:      [#%>] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 001 ====================================
Current line: '<%-'
Split line into 1 words
- There is content
- Lexeme is [ <%-]
-- Scanning current word '<%-' ----------------------------------------
| Counter - (4):
|- Index:     1
|- Line:      1
|- Cursor:    7
|- Column:    0
|- ---
|- Start:    Line: 0:7 - Index 7]
|- End:      Line: 0:3 - Index 3]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [#%>]
|- Current word:   [<%-] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
Characters found are a Prefix
Check condition when state is CLOSE
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 7
Setting End Column => 0
Setting End Line => 1

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = ''
    Index = 1
    Start = @{
        Column = 7
        Line = 0
        Index = 7
    }
    End = @{
        Column = 0
        Line = 1
        Index = 7
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 7
        Line = 0
        Index = 7
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = ''
    End = @{
        Column = 0
        Line = 1
        Index = 7
    }
    Length = 1
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 7
After adding lexeme length : 11

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 4

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 11
Setting Start Column => 4
Setting Start Line => 1

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: CLOSE -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%-]
Word index in input - (5):
- Index:     1
- Line:      1
- Cursor:    11
- Column:    4
- ---
- Word index in this line: 1
- Previous:  [<%-]
- Word:      [<%-] <---
- Next:      []
- ---
- State:     OPEN
- Content:   []
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 002 ====================================
Current line: '---'
Split line into 1 words
- There is content
- Lexeme is [ ---]
-- Scanning current word '---' ----------------------------------------
| Counter - (5):
|- Index:     1
|- Line:      2
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [<%-]
|- Current word:   [---] <---
|- Next word:      []
|- ---
|- State:     OPEN
|- Content:   [
]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [---]
Word index in input - (6):
- Index:     1
- Line:      2
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [---]
- Word:      [---] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [
 ---]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 003 ====================================
Current line: 'title:\ test\ Template'
Split line into 3 words
- There is content
- Lexeme is [ title:]
-- Scanning current word 'title:' ----------------------------------------
| Counter - (6):
|- Index:     1
|- Line:      3
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 0 of 3
|- Previous word:  [---]
|- Current word:   [title:] <---
|- Next word:      [test]
|- ---
|- State:     ELMT
|- Content:   [
 ---
]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [title:]
Word index in input - (7):
- Index:     1
- Line:      3
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [title:]
- Word:      [title:] <---
- Next:      [test]
- ---
- State:     ELMT
- Content:   [
 ---
 title:]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ test]
-- Scanning current word 'test' ----------------------------------------
| Counter - (7):
|- Index:     1
|- Line:      3
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 1 of 3
|- Previous word:  [title:]
|- Current word:   [test] <---
|- Next word:      [Template]
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title:]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [test]
Word index in input - (8):
- Index:     1
- Line:      3
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 2
- Previous:  [test]
- Word:      [test] <---
- Next:      [Template]
- ---
- State:     ELMT
- Content:   [
 ---
 title: test]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ Template]
-- Scanning current word 'Template' ----------------------------------------
| Counter - (8):
|- Index:     1
|- Line:      3
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 2 of 3
|- Previous word:  [test]
|- Current word:   [Template] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title: test]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [Template]
Word index in input - (9):
- Index:     1
- Line:      3
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 3
- Previous:  [Template]
- Word:      [Template] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [
 ---
 title: test Template]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 004 ====================================
Current line: 'tags:'
Split line into 1 words
- There is content
- Lexeme is [ tags:]
-- Scanning current word 'tags:' ----------------------------------------
| Counter - (9):
|- Index:     1
|- Line:      4
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [Template]
|- Current word:   [tags:] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title: test Template
]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [tags:]
Word index in input - (10):
- Index:     1
- Line:      4
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [tags:]
- Word:      [tags:] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [
 ---
 title: test Template
 tags:]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 005 ====================================
Current line: '\ \ -\ test'
Split line into 4 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (10):
|- Index:     1
|- Line:      5
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 0 of 4
|- Previous word:  [tags:]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title: test Template
 tags:
]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (11):
- Index:     1
- Line:      5
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [
 ---
 title: test Template
 tags:
 ]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (11):
|- Index:     1
|- Line:      5
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 1 of 4
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      [-]
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title: test Template
 tags:
 ]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (12):
- Index:     1
- Line:      5
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 2
- Previous:  []
- Word:      [] <---
- Next:      [-]
- ---
- State:     ELMT
- Content:   [
 ---
 title: test Template
 tags:
  ]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ -]
-- Scanning current word '-' ----------------------------------------
| Counter - (12):
|- Index:     1
|- Line:      5
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 2 of 4
|- Previous word:  []
|- Current word:   [-] <---
|- Next word:      [test]
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title: test Template
 tags:
  ]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [-]
Word index in input - (13):
- Index:     1
- Line:      5
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 3
- Previous:  [-]
- Word:      [-] <---
- Next:      [test]
- ---
- State:     ELMT
- Content:   [
 ---
 title: test Template
 tags:
   -]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ test]
-- Scanning current word 'test' ----------------------------------------
| Counter - (13):
|- Index:     1
|- Line:      5
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 3 of 4
|- Previous word:  [-]
|- Current word:   [test] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title: test Template
 tags:
   -]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [test]
Word index in input - (14):
- Index:     1
- Line:      5
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 4
- Previous:  [test]
- Word:      [test] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [
 ---
 title: test Template
 tags:
   - test]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 006 ====================================
Current line: '---'
Split line into 1 words
- There is content
- Lexeme is [ ---]
-- Scanning current word '---' ----------------------------------------
| Counter - (14):
|- Index:     1
|- Line:      6
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [test]
|- Current word:   [---] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title: test Template
 tags:
   - test
]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [---]
Word index in input - (15):
- Index:     1
- Line:      6
- Cursor:    11
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [---]
- Word:      [---] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [
 ---
 title: test Template
 tags:
   - test
 ---]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 007 ====================================
Current line: '%>'
Split line into 1 words
- There is content
- Lexeme is [ %>]
-- Scanning current word '%>' ----------------------------------------
| Counter - (15):
|- Index:     1
|- Line:      7
|- Cursor:    11
|- Column:    0
|- ---
|- Start:    Line: 1:4 - Index 11]
|- End:      Line: 1:0 - Index 7]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [---]
|- Current word:   [%>] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [
 ---
 title: test Template
 tags:
   - test
 ---
]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
-- No characters found before end tag
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 11
Setting End Column => 0
Setting End Line => 7

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
 ---
 title: test Template
 tags:
   - test
 ---
'
    Prefix = '-'
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 4
        Line = 1
        Index = 11
    }
    End = @{
        Column = 0
        Line = 7
        Index = 11
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
 ---
 title: test Template
 tags:
   - test
 ---
'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 4
        Line = 1
        Index = 11
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = '-'
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 0
        Line = 7
        Index = 11
    }
    Length = 50
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 3

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 11
After adding lexeme length : 14

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 3

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 14
Setting Start Column => 3
Setting Start Line => 7

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [%>]
Word index in input - (16):
- Index:     1
- Line:      7
- Cursor:    14
- Column:    3
- ---
- Word index in this line: 1
- Previous:  [%>]
- Word:      [%>] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 008 ====================================
Current line: ''
- line 8 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (16):
|- Index:     1
|- Line:      8
|- Cursor:    14
|- Column:    0
|- ---
|- Start:    Line: 7:3 - Index 14]
|- End:      Line: 7:0 - Index 11]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [%>]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (17):
- Index:     1
- Line:      8
- Cursor:    14
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 009 ====================================
Current line: '<%---\ What\ should\ this\ be\?\ ---%>'
Split line into 6 words
- There is content
- Lexeme is [ <%---]
-- Scanning current word '<%---' ----------------------------------------
| Counter - (17):
|- Index:     1
|- Line:      9
|- Cursor:    14
|- Column:    0
|- ---
|- Start:    Line: 7:3 - Index 14]
|- End:      Line: 7:0 - Index 11]
|- ---
|- Word index in this line: 0 of 6
|- Previous word:  []
|- Current word:   [<%---] <---
|- Next word:      [What]
|- ---
|- State:     CLOSE
|- Content:   [
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
Characters found are a Prefix
Check condition when state is CLOSE
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 14
Setting End Column => 0
Setting End Line => 9

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
 
'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '1'
    Index = 1
    Start = @{
        Column = 3
        Line = 7
        Index = 14
    }
    End = @{
        Column = 0
        Line = 9
        Index = 14
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
 
'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 3
        Line = 7
        Index = 14
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '1'
    End = @{
        Column = 0
        Line = 9
        Index = 14
    }
    Length = 3
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 14
After adding lexeme length : 20

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 6

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 20
Setting Start Column => 6
Setting Start Line => 9

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: CLOSE -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%---]
Word index in input - (18):
- Index:     1
- Line:      9
- Cursor:    20
- Column:    6
- ---
- Word index in this line: 1
- Previous:  [<%---]
- Word:      [<%---] <---
- Next:      [What]
- ---
- State:     OPEN
- Content:   []
- Prefix:    [---]
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [What]
-- Scanning current word 'What' ----------------------------------------
| Counter - (18):
|- Index:     1
|- Line:      9
|- Cursor:    20
|- Column:    6
|- ---
|- Start:    Line: 9:6 - Index 20]
|- End:      Line: 9:0 - Index 14]
|- ---
|- Word index in this line: 1 of 6
|- Previous word:  [<%---]
|- Current word:   [What] <---
|- Next word:      [should]
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    [---]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [What]
Word index in input - (19):
- Index:     1
- Line:      9
- Cursor:    20
- Column:    6
- ---
- Word index in this line: 2
- Previous:  [What]
- Word:      [What] <---
- Next:      [should]
- ---
- State:     ELMT
- Content:   [What]
- Prefix:    [---]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ should]
-- Scanning current word 'should' ----------------------------------------
| Counter - (19):
|- Index:     1
|- Line:      9
|- Cursor:    20
|- Column:    6
|- ---
|- Start:    Line: 9:6 - Index 20]
|- End:      Line: 9:0 - Index 14]
|- ---
|- Word index in this line: 2 of 6
|- Previous word:  [What]
|- Current word:   [should] <---
|- Next word:      [this]
|- ---
|- State:     ELMT
|- Content:   [What]
|- Prefix:    [---]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [should]
Word index in input - (20):
- Index:     1
- Line:      9
- Cursor:    20
- Column:    6
- ---
- Word index in this line: 3
- Previous:  [should]
- Word:      [should] <---
- Next:      [this]
- ---
- State:     ELMT
- Content:   [What should]
- Prefix:    [---]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ this]
-- Scanning current word 'this' ----------------------------------------
| Counter - (20):
|- Index:     1
|- Line:      9
|- Cursor:    20
|- Column:    6
|- ---
|- Start:    Line: 9:6 - Index 20]
|- End:      Line: 9:0 - Index 14]
|- ---
|- Word index in this line: 3 of 6
|- Previous word:  [should]
|- Current word:   [this] <---
|- Next word:      [be?]
|- ---
|- State:     ELMT
|- Content:   [What should]
|- Prefix:    [---]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [this]
Word index in input - (21):
- Index:     1
- Line:      9
- Cursor:    20
- Column:    6
- ---
- Word index in this line: 4
- Previous:  [this]
- Word:      [this] <---
- Next:      [be?]
- ---
- State:     ELMT
- Content:   [What should this]
- Prefix:    [---]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ be?]
-- Scanning current word 'be\?' ----------------------------------------
| Counter - (21):
|- Index:     1
|- Line:      9
|- Cursor:    20
|- Column:    6
|- ---
|- Start:    Line: 9:6 - Index 20]
|- End:      Line: 9:0 - Index 14]
|- ---
|- Word index in this line: 4 of 6
|- Previous word:  [this]
|- Current word:   [be?] <---
|- Next word:      [---%>]
|- ---
|- State:     ELMT
|- Content:   [What should this]
|- Prefix:    [---]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [be?]
Word index in input - (22):
- Index:     1
- Line:      9
- Cursor:    20
- Column:    6
- ---
- Word index in this line: 5
- Previous:  [be?]
- Word:      [be?] <---
- Next:      [---%>]
- ---
- State:     ELMT
- Content:   [What should this be?]
- Prefix:    [---]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ---%>]
-- Scanning current word '---%>' ----------------------------------------
| Counter - (22):
|- Index:     1
|- Line:      9
|- Cursor:    20
|- Column:    6
|- ---
|- Start:    Line: 9:6 - Index 20]
|- End:      Line: 9:0 - Index 14]
|- ---
|- Word index in this line: 5 of 6
|- Previous word:  [be?]
|- Current word:   [---%>] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [What should this be?]
|- Prefix:    [---]
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
- Characters found before end tag
Characters found are a Suffix
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 20
Setting End Column => 6
Setting End Line => 9

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'What should this be?'
    Prefix = '---'
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 6
        Line = 9
        Index = 20
    }
    End = @{
        Column = 6
        Line = 9
        Index = 20
    }
    Suffix = '---'
}

TokenInfo : @{
    Content = 'What should this be?'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 6
        Line = 9
        Index = 20
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = '---'
    Suffix = '---'
    Indent = '0'
    End = @{
        Column = 6
        Line = 9
        Index = 20
    }
    Length = 20
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 6

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 20
After adding lexeme length : 26

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 6
After adding lexeme length : 12

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 26
Setting Start Column => 12
Setting Start Line => 9

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [---%>]
Word index in input - (23):
- Index:     1
- Line:      9
- Cursor:    26
- Column:    12
- ---
- Word index in this line: 6
- Previous:  [---%>]
- Word:      [---%>] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 010 ====================================
Current line: 'A\ test\ template'
Split line into 3 words
- There is content
- Lexeme is [ A]
-- Scanning current word 'A' ----------------------------------------
| Counter - (23):
|- Index:     1
|- Line:      10
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 0 of 3
|- Previous word:  [---%>]
|- Current word:   [A] <---
|- Next word:      [test]
|- ---
|- State:     CLOSE
|- Content:   [
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is CLOSE
STATE CHANGE: CLOSE -> TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [A]
Word index in input - (24):
- Index:     1
- Line:      10
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [A]
- Word:      [A] <---
- Next:      [test]
- ---
- State:     TEXT
- Content:   [
 A]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ test]
-- Scanning current word 'test' ----------------------------------------
| Counter - (24):
|- Index:     1
|- Line:      10
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 1 of 3
|- Previous word:  [A]
|- Current word:   [test] <---
|- Next word:      [template]
|- ---
|- State:     TEXT
|- Content:   [
 A]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [test]
Word index in input - (25):
- Index:     1
- Line:      10
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 2
- Previous:  [test]
- Word:      [test] <---
- Next:      [template]
- ---
- State:     TEXT
- Content:   [
 A test]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ template]
-- Scanning current word 'template' ----------------------------------------
| Counter - (25):
|- Index:     1
|- Line:      10
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 2 of 3
|- Previous word:  [test]
|- Current word:   [template] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [
 A test]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [template]
Word index in input - (26):
- Index:     1
- Line:      10
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 3
- Previous:  [template]
- Word:      [template] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [
 A test template]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 011 ====================================
Current line: ''
- line 11 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (26):
|- Index:     1
|- Line:      11
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [template]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [
 A test template
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (27):
- Index:     1
- Line:      11
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [
 A test template
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 012 ====================================
Current line: 'this\ should\ output\ the\ start\ marker\ <%%'
Split line into 7 words
- There is content
- Lexeme is [ this]
-- Scanning current word 'this' ----------------------------------------
| Counter - (27):
|- Index:     1
|- Line:      12
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 0 of 7
|- Previous word:  []
|- Current word:   [this] <---
|- Next word:      [should]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [this]
Word index in input - (28):
- Index:     1
- Line:      12
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [this]
- Word:      [this] <---
- Next:      [should]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ should]
-- Scanning current word 'should' ----------------------------------------
| Counter - (28):
|- Index:     1
|- Line:      12
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 1 of 7
|- Previous word:  [this]
|- Current word:   [should] <---
|- Next word:      [output]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [should]
Word index in input - (29):
- Index:     1
- Line:      12
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 2
- Previous:  [should]
- Word:      [should] <---
- Next:      [output]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ output]
-- Scanning current word 'output' ----------------------------------------
| Counter - (29):
|- Index:     1
|- Line:      12
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 2 of 7
|- Previous word:  [should]
|- Current word:   [output] <---
|- Next word:      [the]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [output]
Word index in input - (30):
- Index:     1
- Line:      12
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 3
- Previous:  [output]
- Word:      [output] <---
- Next:      [the]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ the]
-- Scanning current word 'the' ----------------------------------------
| Counter - (30):
|- Index:     1
|- Line:      12
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 3 of 7
|- Previous word:  [output]
|- Current word:   [the] <---
|- Next word:      [start]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [the]
Word index in input - (31):
- Index:     1
- Line:      12
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 4
- Previous:  [the]
- Word:      [the] <---
- Next:      [start]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ start]
-- Scanning current word 'start' ----------------------------------------
| Counter - (31):
|- Index:     1
|- Line:      12
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 4 of 7
|- Previous word:  [the]
|- Current word:   [start] <---
|- Next word:      [marker]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [start]
Word index in input - (32):
- Index:     1
- Line:      12
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 5
- Previous:  [start]
- Word:      [start] <---
- Next:      [marker]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ marker]
-- Scanning current word 'marker' ----------------------------------------
| Counter - (32):
|- Index:     1
|- Line:      12
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 5 of 7
|- Previous word:  [start]
|- Current word:   [marker] <---
|- Next word:      [<%%]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [marker]
Word index in input - (33):
- Index:     1
- Line:      12
- Cursor:    26
- Column:    0
- ---
- Word index in this line: 6
- Previous:  [marker]
- Word:      [marker] <---
- Next:      [<%%]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ <%%]
-- Scanning current word '<%%' ----------------------------------------
| Counter - (33):
|- Index:     1
|- Line:      12
|- Cursor:    26
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 6 of 7
|- Previous word:  [marker]
|- Current word:   [<%%] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
** ESCAPED START - Add start tag to content
  - Adding  <%% to content

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 26
After adding lexeme length : 30

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 4

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------
- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 013 ====================================
Current line: ''
- line 13 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (33):
|- Index:     1
|- Line:      13
|- Cursor:    30
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [marker]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (34):
- Index:     1
- Line:      13
- Cursor:    30
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 014 ====================================
Current line: 'this\ should\ output\ the\ end\ marker\ %%>'
Split line into 7 words
- There is content
- Lexeme is [ this]
-- Scanning current word 'this' ----------------------------------------
| Counter - (34):
|- Index:     1
|- Line:      14
|- Cursor:    30
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 0 of 7
|- Previous word:  []
|- Current word:   [this] <---
|- Next word:      [should]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [this]
Word index in input - (35):
- Index:     1
- Line:      14
- Cursor:    30
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [this]
- Word:      [this] <---
- Next:      [should]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ should]
-- Scanning current word 'should' ----------------------------------------
| Counter - (35):
|- Index:     1
|- Line:      14
|- Cursor:    30
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 1 of 7
|- Previous word:  [this]
|- Current word:   [should] <---
|- Next word:      [output]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [should]
Word index in input - (36):
- Index:     1
- Line:      14
- Cursor:    30
- Column:    0
- ---
- Word index in this line: 2
- Previous:  [should]
- Word:      [should] <---
- Next:      [output]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ output]
-- Scanning current word 'output' ----------------------------------------
| Counter - (36):
|- Index:     1
|- Line:      14
|- Cursor:    30
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 2 of 7
|- Previous word:  [should]
|- Current word:   [output] <---
|- Next word:      [the]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [output]
Word index in input - (37):
- Index:     1
- Line:      14
- Cursor:    30
- Column:    0
- ---
- Word index in this line: 3
- Previous:  [output]
- Word:      [output] <---
- Next:      [the]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ the]
-- Scanning current word 'the' ----------------------------------------
| Counter - (37):
|- Index:     1
|- Line:      14
|- Cursor:    30
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 3 of 7
|- Previous word:  [output]
|- Current word:   [the] <---
|- Next word:      [end]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [the]
Word index in input - (38):
- Index:     1
- Line:      14
- Cursor:    30
- Column:    0
- ---
- Word index in this line: 4
- Previous:  [the]
- Word:      [the] <---
- Next:      [end]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ end]
-- Scanning current word 'end' ----------------------------------------
| Counter - (38):
|- Index:     1
|- Line:      14
|- Cursor:    30
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 4 of 7
|- Previous word:  [the]
|- Current word:   [end] <---
|- Next word:      [marker]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [end]
Word index in input - (39):
- Index:     1
- Line:      14
- Cursor:    30
- Column:    0
- ---
- Word index in this line: 5
- Previous:  [end]
- Word:      [end] <---
- Next:      [marker]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the end]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ marker]
-- Scanning current word 'marker' ----------------------------------------
| Counter - (39):
|- Index:     1
|- Line:      14
|- Cursor:    30
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 5 of 7
|- Previous word:  [end]
|- Current word:   [marker] <---
|- Next word:      [%%>]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the end]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [marker]
Word index in input - (40):
- Index:     1
- Line:      14
- Cursor:    30
- Column:    0
- ---
- Word index in this line: 6
- Previous:  [marker]
- Word:      [marker] <---
- Next:      [%%>]
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the end marker]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ %%>]
-- Scanning current word '%%>' ----------------------------------------
| Counter - (40):
|- Index:     1
|- Line:      14
|- Cursor:    30
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 6 of 7
|- Previous word:  [marker]
|- Current word:   [%%>] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the end marker]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
- Characters found before end tag
ESCAPED END - Add end tag to content
Adding  %> to content

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 30
After adding lexeme length : 33

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 3

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------
Check condition when state is TEXT
** Error Found end tag without start tag
- Store current word as prevWord
- Increment word count
Finished scanning word [%%>]
Word index in input - (41):
- Index:     1
- Line:      14
- Cursor:    33
- Column:    3
- ---
- Word index in this line: 7
- Previous:  [%%>]
- Word:      [%%>] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the end marker %>]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 015 ====================================
Current line: ''
- line 15 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (41):
|- Index:     1
|- Line:      15
|- Cursor:    33
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [%%>]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the end marker %>
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (42):
- Index:     1
- Line:      15
- Cursor:    33
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the end marker %>
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 016 ====================================
Current line: '<%\#\ this\ should\ be\ a\ comment\ \#%>'
Split line into 7 words
- There is content
- Lexeme is [ <%#]
-- Scanning current word '<%\#' ----------------------------------------
| Counter - (42):
|- Index:     1
|- Line:      16
|- Cursor:    33
|- Column:    0
|- ---
|- Start:    Line: 9:12 - Index 26]
|- End:      Line: 9:6 - Index 20]
|- ---
|- Word index in this line: 0 of 7
|- Previous word:  []
|- Current word:   [<%#] <---
|- Next word:      [this]
|- ---
|- State:     TEXT
|- Content:   [
 A test template
 
 this should output the start marker <%%
 
 this should output the end marker %>
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
Characters found are a Prefix
Check condition when state is TEXT
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 33
Setting End Column => 0
Setting End Line => 16

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
 A test template
 
 this should output the start marker <%%
 
 this should output the end marker %>
 
'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '1'
    Index = 1
    Start = @{
        Column = 12
        Line = 9
        Index = 26
    }
    End = @{
        Column = 0
        Line = 16
        Index = 33
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
 A test template
 
 this should output the start marker <%%
 
 this should output the end marker %>
 
'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 12
        Line = 9
        Index = 26
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '1'
    End = @{
        Column = 0
        Line = 16
        Index = 33
    }
    Length = 103
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 33
After adding lexeme length : 37

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 4

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 37
Setting Start Column => 4
Setting Start Line => 16

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: TEXT -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%#]
Word index in input - (43):
- Index:     1
- Line:      16
- Cursor:    37
- Column:    4
- ---
- Word index in this line: 1
- Previous:  [<%#]
- Word:      [<%#] <---
- Next:      [this]
- ---
- State:     OPEN
- Content:   []
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [this]
-- Scanning current word 'this' ----------------------------------------
| Counter - (43):
|- Index:     1
|- Line:      16
|- Cursor:    37
|- Column:    4
|- ---
|- Start:    Line: 16:4 - Index 37]
|- End:      Line: 16:0 - Index 33]
|- ---
|- Word index in this line: 1 of 7
|- Previous word:  [<%#]
|- Current word:   [this] <---
|- Next word:      [should]
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [this]
Word index in input - (44):
- Index:     1
- Line:      16
- Cursor:    37
- Column:    4
- ---
- Word index in this line: 2
- Previous:  [this]
- Word:      [this] <---
- Next:      [should]
- ---
- State:     ELMT
- Content:   [this]
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ should]
-- Scanning current word 'should' ----------------------------------------
| Counter - (44):
|- Index:     1
|- Line:      16
|- Cursor:    37
|- Column:    4
|- ---
|- Start:    Line: 16:4 - Index 37]
|- End:      Line: 16:0 - Index 33]
|- ---
|- Word index in this line: 2 of 7
|- Previous word:  [this]
|- Current word:   [should] <---
|- Next word:      [be]
|- ---
|- State:     ELMT
|- Content:   [this]
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [should]
Word index in input - (45):
- Index:     1
- Line:      16
- Cursor:    37
- Column:    4
- ---
- Word index in this line: 3
- Previous:  [should]
- Word:      [should] <---
- Next:      [be]
- ---
- State:     ELMT
- Content:   [this should]
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ be]
-- Scanning current word 'be' ----------------------------------------
| Counter - (45):
|- Index:     1
|- Line:      16
|- Cursor:    37
|- Column:    4
|- ---
|- Start:    Line: 16:4 - Index 37]
|- End:      Line: 16:0 - Index 33]
|- ---
|- Word index in this line: 3 of 7
|- Previous word:  [should]
|- Current word:   [be] <---
|- Next word:      [a]
|- ---
|- State:     ELMT
|- Content:   [this should]
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [be]
Word index in input - (46):
- Index:     1
- Line:      16
- Cursor:    37
- Column:    4
- ---
- Word index in this line: 4
- Previous:  [be]
- Word:      [be] <---
- Next:      [a]
- ---
- State:     ELMT
- Content:   [this should be]
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ a]
-- Scanning current word 'a' ----------------------------------------
| Counter - (46):
|- Index:     1
|- Line:      16
|- Cursor:    37
|- Column:    4
|- ---
|- Start:    Line: 16:4 - Index 37]
|- End:      Line: 16:0 - Index 33]
|- ---
|- Word index in this line: 4 of 7
|- Previous word:  [be]
|- Current word:   [a] <---
|- Next word:      [comment]
|- ---
|- State:     ELMT
|- Content:   [this should be]
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [a]
Word index in input - (47):
- Index:     1
- Line:      16
- Cursor:    37
- Column:    4
- ---
- Word index in this line: 5
- Previous:  [a]
- Word:      [a] <---
- Next:      [comment]
- ---
- State:     ELMT
- Content:   [this should be a]
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ comment]
-- Scanning current word 'comment' ----------------------------------------
| Counter - (47):
|- Index:     1
|- Line:      16
|- Cursor:    37
|- Column:    4
|- ---
|- Start:    Line: 16:4 - Index 37]
|- End:      Line: 16:0 - Index 33]
|- ---
|- Word index in this line: 5 of 7
|- Previous word:  [a]
|- Current word:   [comment] <---
|- Next word:      [#%>]
|- ---
|- State:     ELMT
|- Content:   [this should be a]
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [comment]
Word index in input - (48):
- Index:     1
- Line:      16
- Cursor:    37
- Column:    4
- ---
- Word index in this line: 6
- Previous:  [comment]
- Word:      [comment] <---
- Next:      [#%>]
- ---
- State:     ELMT
- Content:   [this should be a comment]
- Prefix:    [#]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ #%>]
-- Scanning current word '\#%>' ----------------------------------------
| Counter - (48):
|- Index:     1
|- Line:      16
|- Cursor:    37
|- Column:    4
|- ---
|- Start:    Line: 16:4 - Index 37]
|- End:      Line: 16:0 - Index 33]
|- ---
|- Word index in this line: 6 of 7
|- Previous word:  [comment]
|- Current word:   [#%>] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [this should be a comment]
|- Prefix:    [#]
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
- Characters found before end tag
Characters found are a Suffix
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 37
Setting End Column => 4
Setting End Line => 16

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'this should be a comment'
    Prefix = '#'
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 4
        Line = 16
        Index = 37
    }
    End = @{
        Column = 4
        Line = 16
        Index = 37
    }
    Suffix = '#'
}

TokenInfo : @{
    Content = 'this should be a comment'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 4
        Line = 16
        Index = 37
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = '#'
    Suffix = '#'
    Indent = '0'
    End = @{
        Column = 4
        Line = 16
        Index = 37
    }
    Length = 24
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 4

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 37
After adding lexeme length : 41

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 4
After adding lexeme length : 8

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 41
Setting Start Column => 8
Setting Start Line => 16

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [#%>]
Word index in input - (49):
- Index:     1
- Line:      16
- Cursor:    41
- Column:    8
- ---
- Word index in this line: 7
- Previous:  [#%>]
- Word:      [#%>] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 017 ====================================
Current line: ''
- line 17 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (49):
|- Index:     1
|- Line:      17
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [#%>]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (50):
- Index:     1
- Line:      17
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 018 ====================================
Current line: '\ \ \ \ \ \ \ \ \ \ \ <%-\ BLOCK\ friendly-greeting\ %>'
Split line into 15 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (50):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 0 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (51):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (51):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 1 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
 ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (52):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 2
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
  ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (52):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 2 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
  ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (53):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 3
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
   ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (53):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 3 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
   ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (54):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 4
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
    ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (54):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 4 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
    ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (55):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 5
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
     ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (55):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 5 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
     ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (56):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 6
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
      ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (56):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 6 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
      ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (57):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 7
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
       ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (57):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 7 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
       ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (58):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 8
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
        ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (58):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 8 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
        ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (59):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 9
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
         ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (59):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 9 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
         ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (60):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 10
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 
          ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (60):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 10 of 15
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      [<%-]
|- ---
|- State:     CLOSE
|- Content:   [
 
          ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (61):
- Index:     1
- Line:      18
- Cursor:    41
- Column:    0
- ---
- Word index in this line: 11
- Previous:  []
- Word:      [] <---
- Next:      [<%-]
- ---
- State:     CLOSE
- Content:   [
 
           ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ <%-]
-- Scanning current word '<%-' ----------------------------------------
| Counter - (61):
|- Index:     1
|- Line:      18
|- Cursor:    41
|- Column:    0
|- ---
|- Start:    Line: 16:8 - Index 41]
|- End:      Line: 16:4 - Index 37]
|- ---
|- Word index in this line: 11 of 15
|- Previous word:  []
|- Current word:   [<%-] <---
|- Next word:      [BLOCK]
|- ---
|- State:     CLOSE
|- Content:   [
 
           ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
Characters found are a Prefix
Check condition when state is CLOSE
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 41
Setting End Column => 0
Setting End Line => 18

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
 
           '
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '1'
    Index = 1
    Start = @{
        Column = 8
        Line = 16
        Index = 41
    }
    End = @{
        Column = 0
        Line = 18
        Index = 41
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
 
           '
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 8
        Line = 16
        Index = 41
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '1'
    End = @{
        Column = 0
        Line = 18
        Index = 41
    }
    Length = 14
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 41
After adding lexeme length : 45

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 4

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 45
Setting Start Column => 4
Setting Start Line => 18

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: CLOSE -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%-]
Word index in input - (62):
- Index:     1
- Line:      18
- Cursor:    45
- Column:    4
- ---
- Word index in this line: 12
- Previous:  [<%-]
- Word:      [<%-] <---
- Next:      [BLOCK]
- ---
- State:     OPEN
- Content:   []
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [BLOCK]
-- Scanning current word 'BLOCK' ----------------------------------------
| Counter - (62):
|- Index:     1
|- Line:      18
|- Cursor:    45
|- Column:    4
|- ---
|- Start:    Line: 18:4 - Index 45]
|- End:      Line: 18:0 - Index 41]
|- ---
|- Word index in this line: 12 of 15
|- Previous word:  [<%-]
|- Current word:   [BLOCK] <---
|- Next word:      [friendly-greeting]
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [BLOCK]
Word index in input - (63):
- Index:     1
- Line:      18
- Cursor:    45
- Column:    4
- ---
- Word index in this line: 13
- Previous:  [BLOCK]
- Word:      [BLOCK] <---
- Next:      [friendly-greeting]
- ---
- State:     ELMT
- Content:   [BLOCK]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ friendly-greeting]
-- Scanning current word 'friendly-greeting' ----------------------------------------
| Counter - (63):
|- Index:     1
|- Line:      18
|- Cursor:    45
|- Column:    4
|- ---
|- Start:    Line: 18:4 - Index 45]
|- End:      Line: 18:0 - Index 41]
|- ---
|- Word index in this line: 13 of 15
|- Previous word:  [BLOCK]
|- Current word:   [friendly-greeting] <---
|- Next word:      [%>]
|- ---
|- State:     ELMT
|- Content:   [BLOCK]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [friendly-greeting]
Word index in input - (64):
- Index:     1
- Line:      18
- Cursor:    45
- Column:    4
- ---
- Word index in this line: 14
- Previous:  [friendly-greeting]
- Word:      [friendly-greeting] <---
- Next:      [%>]
- ---
- State:     ELMT
- Content:   [BLOCK friendly-greeting]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ %>]
-- Scanning current word '%>' ----------------------------------------
| Counter - (64):
|- Index:     1
|- Line:      18
|- Cursor:    45
|- Column:    4
|- ---
|- Start:    Line: 18:4 - Index 45]
|- End:      Line: 18:0 - Index 41]
|- ---
|- Word index in this line: 14 of 15
|- Previous word:  [friendly-greeting]
|- Current word:   [%>] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [BLOCK friendly-greeting]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
-- No characters found before end tag
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 45
Setting End Column => 4
Setting End Line => 18

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'BLOCK friendly-greeting'
    Prefix = '-'
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 4
        Line = 18
        Index = 45
    }
    End = @{
        Column = 4
        Line = 18
        Index = 45
    }
    Suffix = ''
}

TokenInfo : @{
    Content = 'BLOCK friendly-greeting'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 4
        Line = 18
        Index = 45
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = '-'
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 4
        Line = 18
        Index = 45
    }
    Length = 23
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 3

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 45
After adding lexeme length : 48

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 4
After adding lexeme length : 7

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 48
Setting Start Column => 7
Setting Start Line => 18

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [%>]
Word index in input - (65):
- Index:     1
- Line:      18
- Cursor:    48
- Column:    7
- ---
- Word index in this line: 15
- Previous:  [%>]
- Word:      [%>] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 019 ====================================
Current line: ''
- line 19 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (65):
|- Index:     1
|- Line:      19
|- Cursor:    48
|- Column:    0
|- ---
|- Start:    Line: 18:7 - Index 48]
|- End:      Line: 18:4 - Index 45]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [%>]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (66):
- Index:     1
- Line:      19
- Cursor:    48
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 020 ====================================
Current line: 'This\ should\ say\ 'Hello\ World!'\ :\ <%=\ \$Greeting\ %>\ World!'
Split line into 10 words
- There is content
- Lexeme is [ This]
-- Scanning current word 'This' ----------------------------------------
| Counter - (66):
|- Index:     1
|- Line:      20
|- Cursor:    48
|- Column:    0
|- ---
|- Start:    Line: 18:7 - Index 48]
|- End:      Line: 18:4 - Index 45]
|- ---
|- Word index in this line: 0 of 10
|- Previous word:  []
|- Current word:   [This] <---
|- Next word:      [should]
|- ---
|- State:     CLOSE
|- Content:   [
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is CLOSE
STATE CHANGE: CLOSE -> TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [This]
Word index in input - (67):
- Index:     1
- Line:      20
- Cursor:    48
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [This]
- Word:      [This] <---
- Next:      [should]
- ---
- State:     TEXT
- Content:   [
 
 This]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ should]
-- Scanning current word 'should' ----------------------------------------
| Counter - (67):
|- Index:     1
|- Line:      20
|- Cursor:    48
|- Column:    0
|- ---
|- Start:    Line: 18:7 - Index 48]
|- End:      Line: 18:4 - Index 45]
|- ---
|- Word index in this line: 1 of 10
|- Previous word:  [This]
|- Current word:   [should] <---
|- Next word:      [say]
|- ---
|- State:     TEXT
|- Content:   [
 
 This]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [should]
Word index in input - (68):
- Index:     1
- Line:      20
- Cursor:    48
- Column:    0
- ---
- Word index in this line: 2
- Previous:  [should]
- Word:      [should] <---
- Next:      [say]
- ---
- State:     TEXT
- Content:   [
 
 This should]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ say]
-- Scanning current word 'say' ----------------------------------------
| Counter - (68):
|- Index:     1
|- Line:      20
|- Cursor:    48
|- Column:    0
|- ---
|- Start:    Line: 18:7 - Index 48]
|- End:      Line: 18:4 - Index 45]
|- ---
|- Word index in this line: 2 of 10
|- Previous word:  [should]
|- Current word:   [say] <---
|- Next word:      ['Hello]
|- ---
|- State:     TEXT
|- Content:   [
 
 This should]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [say]
Word index in input - (69):
- Index:     1
- Line:      20
- Cursor:    48
- Column:    0
- ---
- Word index in this line: 3
- Previous:  [say]
- Word:      [say] <---
- Next:      ['Hello]
- ---
- State:     TEXT
- Content:   [
 
 This should say]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ 'Hello]
-- Scanning current word ''Hello' ----------------------------------------
| Counter - (69):
|- Index:     1
|- Line:      20
|- Cursor:    48
|- Column:    0
|- ---
|- Start:    Line: 18:7 - Index 48]
|- End:      Line: 18:4 - Index 45]
|- ---
|- Word index in this line: 3 of 10
|- Previous word:  [say]
|- Current word:   ['Hello] <---
|- Next word:      [World!']
|- ---
|- State:     TEXT
|- Content:   [
 
 This should say]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word ['Hello]
Word index in input - (70):
- Index:     1
- Line:      20
- Cursor:    48
- Column:    0
- ---
- Word index in this line: 4
- Previous:  ['Hello]
- Word:      ['Hello] <---
- Next:      [World!']
- ---
- State:     TEXT
- Content:   [
 
 This should say 'Hello]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ World!']
-- Scanning current word 'World!'' ----------------------------------------
| Counter - (70):
|- Index:     1
|- Line:      20
|- Cursor:    48
|- Column:    0
|- ---
|- Start:    Line: 18:7 - Index 48]
|- End:      Line: 18:4 - Index 45]
|- ---
|- Word index in this line: 4 of 10
|- Previous word:  ['Hello]
|- Current word:   [World!'] <---
|- Next word:      [:]
|- ---
|- State:     TEXT
|- Content:   [
 
 This should say 'Hello]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [World!']
Word index in input - (71):
- Index:     1
- Line:      20
- Cursor:    48
- Column:    0
- ---
- Word index in this line: 5
- Previous:  [World!']
- Word:      [World!'] <---
- Next:      [:]
- ---
- State:     TEXT
- Content:   [
 
 This should say 'Hello World!']
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ :]
-- Scanning current word ':' ----------------------------------------
| Counter - (71):
|- Index:     1
|- Line:      20
|- Cursor:    48
|- Column:    0
|- ---
|- Start:    Line: 18:7 - Index 48]
|- End:      Line: 18:4 - Index 45]
|- ---
|- Word index in this line: 5 of 10
|- Previous word:  [World!']
|- Current word:   [:] <---
|- Next word:      [<%=]
|- ---
|- State:     TEXT
|- Content:   [
 
 This should say 'Hello World!']
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [:]
Word index in input - (72):
- Index:     1
- Line:      20
- Cursor:    48
- Column:    0
- ---
- Word index in this line: 6
- Previous:  [:]
- Word:      [:] <---
- Next:      [<%=]
- ---
- State:     TEXT
- Content:   [
 
 This should say 'Hello World!' :]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ <%=]
-- Scanning current word '<%=' ----------------------------------------
| Counter - (72):
|- Index:     1
|- Line:      20
|- Cursor:    48
|- Column:    0
|- ---
|- Start:    Line: 18:7 - Index 48]
|- End:      Line: 18:4 - Index 45]
|- ---
|- Word index in this line: 6 of 10
|- Previous word:  [:]
|- Current word:   [<%=] <---
|- Next word:      [$Greeting]
|- ---
|- State:     TEXT
|- Content:   [
 
 This should say 'Hello World!' :]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
Characters found are a Prefix
Check condition when state is TEXT
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 48
Setting End Column => 0
Setting End Line => 20

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
 
 This should say ''Hello World!'' :'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 7
        Line = 18
        Index = 48
    }
    End = @{
        Column = 0
        Line = 20
        Index = 48
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
 
 This should say ''Hello World!'' :'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 7
        Line = 18
        Index = 48
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 0
        Line = 20
        Index = 48
    }
    Length = 36
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 48
After adding lexeme length : 52

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 4

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 52
Setting Start Column => 4
Setting Start Line => 20

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: TEXT -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%=]
Word index in input - (73):
- Index:     1
- Line:      20
- Cursor:    52
- Column:    4
- ---
- Word index in this line: 7
- Previous:  [<%=]
- Word:      [<%=] <---
- Next:      [$Greeting]
- ---
- State:     OPEN
- Content:   []
- Prefix:    [=]
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [$Greeting]
-- Scanning current word '\$Greeting' ----------------------------------------
| Counter - (73):
|- Index:     1
|- Line:      20
|- Cursor:    52
|- Column:    4
|- ---
|- Start:    Line: 20:4 - Index 52]
|- End:      Line: 20:0 - Index 48]
|- ---
|- Word index in this line: 7 of 10
|- Previous word:  [<%=]
|- Current word:   [$Greeting] <---
|- Next word:      [%>]
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    [=]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [$Greeting]
Word index in input - (74):
- Index:     1
- Line:      20
- Cursor:    52
- Column:    4
- ---
- Word index in this line: 8
- Previous:  [$Greeting]
- Word:      [$Greeting] <---
- Next:      [%>]
- ---
- State:     ELMT
- Content:   [$Greeting]
- Prefix:    [=]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ %>]
-- Scanning current word '%>' ----------------------------------------
| Counter - (74):
|- Index:     1
|- Line:      20
|- Cursor:    52
|- Column:    4
|- ---
|- Start:    Line: 20:4 - Index 52]
|- End:      Line: 20:0 - Index 48]
|- ---
|- Word index in this line: 8 of 10
|- Previous word:  [$Greeting]
|- Current word:   [%>] <---
|- Next word:      [World!]
|- ---
|- State:     ELMT
|- Content:   [$Greeting]
|- Prefix:    [=]
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
-- No characters found before end tag
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 52
Setting End Column => 4
Setting End Line => 20

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '$Greeting'
    Prefix = '='
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 4
        Line = 20
        Index = 52
    }
    End = @{
        Column = 4
        Line = 20
        Index = 52
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '$Greeting'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 4
        Line = 20
        Index = 52
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = '='
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 4
        Line = 20
        Index = 52
    }
    Length = 9
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 3

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 52
After adding lexeme length : 55

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 4
After adding lexeme length : 7

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 55
Setting Start Column => 7
Setting Start Line => 20

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [%>]
Word index in input - (75):
- Index:     1
- Line:      20
- Cursor:    55
- Column:    7
- ---
- Word index in this line: 9
- Previous:  [%>]
- Word:      [%>] <---
- Next:      [World!]
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [World!]
-- Scanning current word 'World!' ----------------------------------------
| Counter - (75):
|- Index:     1
|- Line:      20
|- Cursor:    55
|- Column:    7
|- ---
|- Start:    Line: 20:7 - Index 55]
|- End:      Line: 20:4 - Index 52]
|- ---
|- Word index in this line: 9 of 10
|- Previous word:  [%>]
|- Current word:   [World!] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   []
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is CLOSE
STATE CHANGE: CLOSE -> TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [World!]
Word index in input - (76):
- Index:     1
- Line:      20
- Cursor:    55
- Column:    7
- ---
- Word index in this line: 10
- Previous:  [World!]
- Word:      [World!] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [World!]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 021 ====================================
Current line: ''
- line 21 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (76):
|- Index:     1
|- Line:      21
|- Cursor:    55
|- Column:    0
|- ---
|- Start:    Line: 20:7 - Index 55]
|- End:      Line: 20:4 - Index 52]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [World!]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [World!
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (77):
- Index:     1
- Line:      21
- Cursor:    55
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [World!
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 022 ====================================
Current line: '<%\ END\ %>'
Split line into 3 words
- There is content
- Lexeme is [ <%]
-- Scanning current word '<%' ----------------------------------------
| Counter - (77):
|- Index:     1
|- Line:      22
|- Cursor:    55
|- Column:    0
|- ---
|- Start:    Line: 20:7 - Index 55]
|- End:      Line: 20:4 - Index 52]
|- ---
|- Word index in this line: 0 of 3
|- Previous word:  []
|- Current word:   [<%] <---
|- Next word:      [END]
|- ---
|- State:     TEXT
|- Content:   [World!
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
-- No characters found after start tag
Check condition when state is TEXT
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 55
Setting End Column => 0
Setting End Line => 22

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'World!
 
'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '1'
    Index = 1
    Start = @{
        Column = 7
        Line = 20
        Index = 55
    }
    End = @{
        Column = 0
        Line = 22
        Index = 55
    }
    Suffix = ''
}

TokenInfo : @{
    Content = 'World!
 
'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 7
        Line = 20
        Index = 55
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '1'
    End = @{
        Column = 0
        Line = 22
        Index = 55
    }
    Length = 9
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 55
After adding lexeme length : 58

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 3

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 58
Setting Start Column => 3
Setting Start Line => 22

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: TEXT -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%]
Word index in input - (78):
- Index:     1
- Line:      22
- Cursor:    58
- Column:    3
- ---
- Word index in this line: 1
- Previous:  [<%]
- Word:      [<%] <---
- Next:      [END]
- ---
- State:     OPEN
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [END]
-- Scanning current word 'END' ----------------------------------------
| Counter - (78):
|- Index:     1
|- Line:      22
|- Cursor:    58
|- Column:    3
|- ---
|- Start:    Line: 22:3 - Index 58]
|- End:      Line: 22:0 - Index 55]
|- ---
|- Word index in this line: 1 of 3
|- Previous word:  [<%]
|- Current word:   [END] <---
|- Next word:      [%>]
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [END]
Word index in input - (79):
- Index:     1
- Line:      22
- Cursor:    58
- Column:    3
- ---
- Word index in this line: 2
- Previous:  [END]
- Word:      [END] <---
- Next:      [%>]
- ---
- State:     ELMT
- Content:   [END]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ %>]
-- Scanning current word '%>' ----------------------------------------
| Counter - (79):
|- Index:     1
|- Line:      22
|- Cursor:    58
|- Column:    3
|- ---
|- Start:    Line: 22:3 - Index 58]
|- End:      Line: 22:0 - Index 55]
|- ---
|- Word index in this line: 2 of 3
|- Previous word:  [END]
|- Current word:   [%>] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [END]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
-- No characters found before end tag
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 58
Setting End Column => 3
Setting End Line => 22

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'END'
    Prefix = ''
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 3
        Line = 22
        Index = 58
    }
    End = @{
        Column = 3
        Line = 22
        Index = 58
    }
    Suffix = ''
}

TokenInfo : @{
    Content = 'END'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 3
        Line = 22
        Index = 58
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = ''
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 3
        Line = 22
        Index = 58
    }
    Length = 3
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 3

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 58
After adding lexeme length : 61

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 3
After adding lexeme length : 6

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 61
Setting Start Column => 6
Setting Start Line => 22

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [%>]
Word index in input - (80):
- Index:     1
- Line:      22
- Cursor:    61
- Column:    6
- ---
- Word index in this line: 3
- Previous:  [%>]
- Word:      [%>] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 023 ====================================
Current line: ''
- line 23 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (80):
|- Index:     1
|- Line:      23
|- Cursor:    61
|- Column:    0
|- ---
|- Start:    Line: 22:6 - Index 61]
|- End:      Line: 22:3 - Index 58]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [%>]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (81):
- Index:     1
- Line:      23
- Cursor:    61
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 024 ====================================
Current line: 'Hope\ \ you\ <%=\ \(echo\ "all"\)\ %>\ have\ a\ nice\ day'
Split line into 11 words
- There is content
- Lexeme is [ Hope]
-- Scanning current word 'Hope' ----------------------------------------
| Counter - (81):
|- Index:     1
|- Line:      24
|- Cursor:    61
|- Column:    0
|- ---
|- Start:    Line: 22:6 - Index 61]
|- End:      Line: 22:3 - Index 58]
|- ---
|- Word index in this line: 0 of 11
|- Previous word:  []
|- Current word:   [Hope] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is CLOSE
STATE CHANGE: CLOSE -> TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [Hope]
Word index in input - (82):
- Index:     1
- Line:      24
- Cursor:    61
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [Hope]
- Word:      [Hope] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [
 
 Hope]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (82):
|- Index:     1
|- Line:      24
|- Cursor:    61
|- Column:    0
|- ---
|- Start:    Line: 22:6 - Index 61]
|- End:      Line: 22:3 - Index 58]
|- ---
|- Word index in this line: 1 of 11
|- Previous word:  [Hope]
|- Current word:   [] <---
|- Next word:      [you]
|- ---
|- State:     TEXT
|- Content:   [
 
 Hope]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (83):
- Index:     1
- Line:      24
- Cursor:    61
- Column:    0
- ---
- Word index in this line: 2
- Previous:  []
- Word:      [] <---
- Next:      [you]
- ---
- State:     TEXT
- Content:   [
 
 Hope ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ you]
-- Scanning current word 'you' ----------------------------------------
| Counter - (83):
|- Index:     1
|- Line:      24
|- Cursor:    61
|- Column:    0
|- ---
|- Start:    Line: 22:6 - Index 61]
|- End:      Line: 22:3 - Index 58]
|- ---
|- Word index in this line: 2 of 11
|- Previous word:  []
|- Current word:   [you] <---
|- Next word:      [<%=]
|- ---
|- State:     TEXT
|- Content:   [
 
 Hope ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [you]
Word index in input - (84):
- Index:     1
- Line:      24
- Cursor:    61
- Column:    0
- ---
- Word index in this line: 3
- Previous:  [you]
- Word:      [you] <---
- Next:      [<%=]
- ---
- State:     TEXT
- Content:   [
 
 Hope  you]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ <%=]
-- Scanning current word '<%=' ----------------------------------------
| Counter - (84):
|- Index:     1
|- Line:      24
|- Cursor:    61
|- Column:    0
|- ---
|- Start:    Line: 22:6 - Index 61]
|- End:      Line: 22:3 - Index 58]
|- ---
|- Word index in this line: 3 of 11
|- Previous word:  [you]
|- Current word:   [<%=] <---
|- Next word:      [(echo]
|- ---
|- State:     TEXT
|- Content:   [
 
 Hope  you]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
Characters found are a Prefix
Check condition when state is TEXT
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 61
Setting End Column => 0
Setting End Line => 24

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
 
 Hope  you'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 6
        Line = 22
        Index = 61
    }
    End = @{
        Column = 0
        Line = 24
        Index = 61
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
 
 Hope  you'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 6
        Line = 22
        Index = 61
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 0
        Line = 24
        Index = 61
    }
    Length = 13
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 61
After adding lexeme length : 65

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 4

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 65
Setting Start Column => 4
Setting Start Line => 24

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: TEXT -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%=]
Word index in input - (85):
- Index:     1
- Line:      24
- Cursor:    65
- Column:    4
- ---
- Word index in this line: 4
- Previous:  [<%=]
- Word:      [<%=] <---
- Next:      [(echo]
- ---
- State:     OPEN
- Content:   []
- Prefix:    [=]
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [(echo]
-- Scanning current word '\(echo' ----------------------------------------
| Counter - (85):
|- Index:     1
|- Line:      24
|- Cursor:    65
|- Column:    4
|- ---
|- Start:    Line: 24:4 - Index 65]
|- End:      Line: 24:0 - Index 61]
|- ---
|- Word index in this line: 4 of 11
|- Previous word:  [<%=]
|- Current word:   [(echo] <---
|- Next word:      ["all")]
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    [=]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [(echo]
Word index in input - (86):
- Index:     1
- Line:      24
- Cursor:    65
- Column:    4
- ---
- Word index in this line: 5
- Previous:  [(echo]
- Word:      [(echo] <---
- Next:      ["all")]
- ---
- State:     ELMT
- Content:   [(echo]
- Prefix:    [=]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ "all")]
-- Scanning current word '"all"\)' ----------------------------------------
| Counter - (86):
|- Index:     1
|- Line:      24
|- Cursor:    65
|- Column:    4
|- ---
|- Start:    Line: 24:4 - Index 65]
|- End:      Line: 24:0 - Index 61]
|- ---
|- Word index in this line: 5 of 11
|- Previous word:  [(echo]
|- Current word:   ["all")] <---
|- Next word:      [%>]
|- ---
|- State:     ELMT
|- Content:   [(echo]
|- Prefix:    [=]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word ["all")]
Word index in input - (87):
- Index:     1
- Line:      24
- Cursor:    65
- Column:    4
- ---
- Word index in this line: 6
- Previous:  ["all")]
- Word:      ["all")] <---
- Next:      [%>]
- ---
- State:     ELMT
- Content:   [(echo "all")]
- Prefix:    [=]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ %>]
-- Scanning current word '%>' ----------------------------------------
| Counter - (87):
|- Index:     1
|- Line:      24
|- Cursor:    65
|- Column:    4
|- ---
|- Start:    Line: 24:4 - Index 65]
|- End:      Line: 24:0 - Index 61]
|- ---
|- Word index in this line: 6 of 11
|- Previous word:  ["all")]
|- Current word:   [%>] <---
|- Next word:      [have]
|- ---
|- State:     ELMT
|- Content:   [(echo "all")]
|- Prefix:    [=]
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
-- No characters found before end tag
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 65
Setting End Column => 4
Setting End Line => 24

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '(echo "all")'
    Prefix = '='
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 4
        Line = 24
        Index = 65
    }
    End = @{
        Column = 4
        Line = 24
        Index = 65
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '(echo "all")'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 4
        Line = 24
        Index = 65
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = '='
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 4
        Line = 24
        Index = 65
    }
    Length = 12
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 3

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 65
After adding lexeme length : 68

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 4
After adding lexeme length : 7

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 68
Setting Start Column => 7
Setting Start Line => 24

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [%>]
Word index in input - (88):
- Index:     1
- Line:      24
- Cursor:    68
- Column:    7
- ---
- Word index in this line: 7
- Previous:  [%>]
- Word:      [%>] <---
- Next:      [have]
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [have]
-- Scanning current word 'have' ----------------------------------------
| Counter - (88):
|- Index:     1
|- Line:      24
|- Cursor:    68
|- Column:    7
|- ---
|- Start:    Line: 24:7 - Index 68]
|- End:      Line: 24:4 - Index 65]
|- ---
|- Word index in this line: 7 of 11
|- Previous word:  [%>]
|- Current word:   [have] <---
|- Next word:      [a]
|- ---
|- State:     CLOSE
|- Content:   []
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is CLOSE
STATE CHANGE: CLOSE -> TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [have]
Word index in input - (89):
- Index:     1
- Line:      24
- Cursor:    68
- Column:    7
- ---
- Word index in this line: 8
- Previous:  [have]
- Word:      [have] <---
- Next:      [a]
- ---
- State:     TEXT
- Content:   [have]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ a]
-- Scanning current word 'a' ----------------------------------------
| Counter - (89):
|- Index:     1
|- Line:      24
|- Cursor:    68
|- Column:    7
|- ---
|- Start:    Line: 24:7 - Index 68]
|- End:      Line: 24:4 - Index 65]
|- ---
|- Word index in this line: 8 of 11
|- Previous word:  [have]
|- Current word:   [a] <---
|- Next word:      [nice]
|- ---
|- State:     TEXT
|- Content:   [have]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [a]
Word index in input - (90):
- Index:     1
- Line:      24
- Cursor:    68
- Column:    7
- ---
- Word index in this line: 9
- Previous:  [a]
- Word:      [a] <---
- Next:      [nice]
- ---
- State:     TEXT
- Content:   [have a]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ nice]
-- Scanning current word 'nice' ----------------------------------------
| Counter - (90):
|- Index:     1
|- Line:      24
|- Cursor:    68
|- Column:    7
|- ---
|- Start:    Line: 24:7 - Index 68]
|- End:      Line: 24:4 - Index 65]
|- ---
|- Word index in this line: 9 of 11
|- Previous word:  [a]
|- Current word:   [nice] <---
|- Next word:      [day]
|- ---
|- State:     TEXT
|- Content:   [have a]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [nice]
Word index in input - (91):
- Index:     1
- Line:      24
- Cursor:    68
- Column:    7
- ---
- Word index in this line: 10
- Previous:  [nice]
- Word:      [nice] <---
- Next:      [day]
- ---
- State:     TEXT
- Content:   [have a nice]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ day]
-- Scanning current word 'day' ----------------------------------------
| Counter - (91):
|- Index:     1
|- Line:      24
|- Cursor:    68
|- Column:    7
|- ---
|- Start:    Line: 24:7 - Index 68]
|- End:      Line: 24:4 - Index 65]
|- ---
|- Word index in this line: 10 of 11
|- Previous word:  [nice]
|- Current word:   [day] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [have a nice]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [day]
Word index in input - (92):
- Index:     1
- Line:      24
- Cursor:    68
- Column:    7
- ---
- Word index in this line: 11
- Previous:  [day]
- Word:      [day] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [have a nice day]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 025 ====================================
Current line: ''
- line 25 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (92):
|- Index:     1
|- Line:      25
|- Cursor:    68
|- Column:    0
|- ---
|- Start:    Line: 24:7 - Index 68]
|- End:      Line: 24:4 - Index 65]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [day]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [have a nice day
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (93):
- Index:     1
- Line:      25
- Cursor:    68
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [have a nice day
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 026 ====================================
Current line: '<%\ foreach\ \(\$item\ in\ \$items\)\ \{'
Split line into 6 words
- There is content
- Lexeme is [ <%]
-- Scanning current word '<%' ----------------------------------------
| Counter - (93):
|- Index:     1
|- Line:      26
|- Cursor:    68
|- Column:    0
|- ---
|- Start:    Line: 24:7 - Index 68]
|- End:      Line: 24:4 - Index 65]
|- ---
|- Word index in this line: 0 of 6
|- Previous word:  []
|- Current word:   [<%] <---
|- Next word:      [foreach]
|- ---
|- State:     TEXT
|- Content:   [have a nice day
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
-- No characters found after start tag
Check condition when state is TEXT
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 68
Setting End Column => 0
Setting End Line => 26

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'have a nice day
 
'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '1'
    Index = 1
    Start = @{
        Column = 7
        Line = 24
        Index = 68
    }
    End = @{
        Column = 0
        Line = 26
        Index = 68
    }
    Suffix = ''
}

TokenInfo : @{
    Content = 'have a nice day
 
'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 7
        Line = 24
        Index = 68
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '1'
    End = @{
        Column = 0
        Line = 26
        Index = 68
    }
    Length = 18
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 68
After adding lexeme length : 71

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 3

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 71
Setting Start Column => 3
Setting Start Line => 26

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: TEXT -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%]
Word index in input - (94):
- Index:     1
- Line:      26
- Cursor:    71
- Column:    3
- ---
- Word index in this line: 1
- Previous:  [<%]
- Word:      [<%] <---
- Next:      [foreach]
- ---
- State:     OPEN
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [foreach]
-- Scanning current word 'foreach' ----------------------------------------
| Counter - (94):
|- Index:     1
|- Line:      26
|- Cursor:    71
|- Column:    3
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 1 of 6
|- Previous word:  [<%]
|- Current word:   [foreach] <---
|- Next word:      [($item]
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [foreach]
Word index in input - (95):
- Index:     1
- Line:      26
- Cursor:    71
- Column:    3
- ---
- Word index in this line: 2
- Previous:  [foreach]
- Word:      [foreach] <---
- Next:      [($item]
- ---
- State:     ELMT
- Content:   [foreach]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ($item]
-- Scanning current word '\(\$item' ----------------------------------------
| Counter - (95):
|- Index:     1
|- Line:      26
|- Cursor:    71
|- Column:    3
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 2 of 6
|- Previous word:  [foreach]
|- Current word:   [($item] <---
|- Next word:      [in]
|- ---
|- State:     ELMT
|- Content:   [foreach]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [($item]
Word index in input - (96):
- Index:     1
- Line:      26
- Cursor:    71
- Column:    3
- ---
- Word index in this line: 3
- Previous:  [($item]
- Word:      [($item] <---
- Next:      [in]
- ---
- State:     ELMT
- Content:   [foreach ($item]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ in]
-- Scanning current word 'in' ----------------------------------------
| Counter - (96):
|- Index:     1
|- Line:      26
|- Cursor:    71
|- Column:    3
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 3 of 6
|- Previous word:  [($item]
|- Current word:   [in] <---
|- Next word:      [$items)]
|- ---
|- State:     ELMT
|- Content:   [foreach ($item]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [in]
Word index in input - (97):
- Index:     1
- Line:      26
- Cursor:    71
- Column:    3
- ---
- Word index in this line: 4
- Previous:  [in]
- Word:      [in] <---
- Next:      [$items)]
- ---
- State:     ELMT
- Content:   [foreach ($item in]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ $items)]
-- Scanning current word '\$items\)' ----------------------------------------
| Counter - (97):
|- Index:     1
|- Line:      26
|- Cursor:    71
|- Column:    3
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 4 of 6
|- Previous word:  [in]
|- Current word:   [$items)] <---
|- Next word:      [{]
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [$items)]
Word index in input - (98):
- Index:     1
- Line:      26
- Cursor:    71
- Column:    3
- ---
- Word index in this line: 5
- Previous:  [$items)]
- Word:      [$items)] <---
- Next:      [{]
- ---
- State:     ELMT
- Content:   [foreach ($item in $items)]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ {]
-- Scanning current word '\{' ----------------------------------------
| Counter - (98):
|- Index:     1
|- Line:      26
|- Cursor:    71
|- Column:    3
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 5 of 6
|- Previous word:  [$items)]
|- Current word:   [{] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items)]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [{]
Word index in input - (99):
- Index:     1
- Line:      26
- Cursor:    71
- Column:    3
- ---
- Word index in this line: 6
- Previous:  [{]
- Word:      [{] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [foreach ($item in $items) {]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 027 ====================================
Current line: '\ \ \ \ Write-Output\ \$item'
Split line into 6 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (99):
|- Index:     1
|- Line:      27
|- Cursor:    71
|- Column:    0
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 0 of 6
|- Previous word:  [{]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items) {
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (100):
- Index:     1
- Line:      27
- Cursor:    71
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [foreach ($item in $items) {
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (100):
|- Index:     1
|- Line:      27
|- Cursor:    71
|- Column:    0
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 1 of 6
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items) {
 ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (101):
- Index:     1
- Line:      27
- Cursor:    71
- Column:    0
- ---
- Word index in this line: 2
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [foreach ($item in $items) {
  ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (101):
|- Index:     1
|- Line:      27
|- Cursor:    71
|- Column:    0
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 2 of 6
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items) {
  ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (102):
- Index:     1
- Line:      27
- Cursor:    71
- Column:    0
- ---
- Word index in this line: 3
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [foreach ($item in $items) {
   ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (102):
|- Index:     1
|- Line:      27
|- Cursor:    71
|- Column:    0
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 3 of 6
|- Previous word:  []
|- Current word:   [] <---
|- Next word:      [Write-Output]
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items) {
   ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (103):
- Index:     1
- Line:      27
- Cursor:    71
- Column:    0
- ---
- Word index in this line: 4
- Previous:  []
- Word:      [] <---
- Next:      [Write-Output]
- ---
- State:     ELMT
- Content:   [foreach ($item in $items) {
    ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ Write-Output]
-- Scanning current word 'Write-Output' ----------------------------------------
| Counter - (103):
|- Index:     1
|- Line:      27
|- Cursor:    71
|- Column:    0
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 4 of 6
|- Previous word:  []
|- Current word:   [Write-Output] <---
|- Next word:      [$item]
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items) {
    ]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [Write-Output]
Word index in input - (104):
- Index:     1
- Line:      27
- Cursor:    71
- Column:    0
- ---
- Word index in this line: 5
- Previous:  [Write-Output]
- Word:      [Write-Output] <---
- Next:      [$item]
- ---
- State:     ELMT
- Content:   [foreach ($item in $items) {
     Write-Output]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ $item]
-- Scanning current word '\$item' ----------------------------------------
| Counter - (104):
|- Index:     1
|- Line:      27
|- Cursor:    71
|- Column:    0
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 5 of 6
|- Previous word:  [Write-Output]
|- Current word:   [$item] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items) {
     Write-Output]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [$item]
Word index in input - (105):
- Index:     1
- Line:      27
- Cursor:    71
- Column:    0
- ---
- Word index in this line: 6
- Previous:  [$item]
- Word:      [$item] <---
- Next:      []
- ---
- State:     ELMT
- Content:   [foreach ($item in $items) {
     Write-Output $item]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 028 ====================================
Current line: '}\ %>'
Split line into 2 words
- There is content
- Lexeme is [ }]
-- Scanning current word '}' ----------------------------------------
| Counter - (105):
|- Index:     1
|- Line:      28
|- Cursor:    71
|- Column:    0
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 0 of 2
|- Previous word:  [$item]
|- Current word:   [}] <---
|- Next word:      [%>]
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items) {
     Write-Output $item
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [}]
Word index in input - (106):
- Index:     1
- Line:      28
- Cursor:    71
- Column:    0
- ---
- Word index in this line: 1
- Previous:  [}]
- Word:      [}] <---
- Next:      [%>]
- ---
- State:     ELMT
- Content:   [foreach ($item in $items) {
     Write-Output $item
 }]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ %>]
-- Scanning current word '%>' ----------------------------------------
| Counter - (106):
|- Index:     1
|- Line:      28
|- Cursor:    71
|- Column:    0
|- ---
|- Start:    Line: 26:3 - Index 71]
|- End:      Line: 26:0 - Index 68]
|- ---
|- Word index in this line: 1 of 2
|- Previous word:  [}]
|- Current word:   [%>] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [foreach ($item in $items) {
     Write-Output $item
 }]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
-- No characters found before end tag
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 71
Setting End Column => 0
Setting End Line => 28

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'foreach ($item in $items) {
     Write-Output $item
 }'
    Prefix = ''
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 3
        Line = 26
        Index = 71
    }
    End = @{
        Column = 0
        Line = 28
        Index = 71
    }
    Suffix = ''
}

TokenInfo : @{
    Content = 'foreach ($item in $items) {
     Write-Output $item
 }'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 3
        Line = 26
        Index = 71
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = ''
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 0
        Line = 28
        Index = 71
    }
    Length = 54
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 3

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 71
After adding lexeme length : 74

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 3

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 74
Setting Start Column => 3
Setting Start Line => 28

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [%>]
Word index in input - (107):
- Index:     1
- Line:      28
- Cursor:    74
- Column:    3
- ---
- Word index in this line: 2
- Previous:  [%>]
- Word:      [%>] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 029 ====================================
Current line: ''
- line 29 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (107):
|- Index:     1
|- Line:      29
|- Cursor:    74
|- Column:    0
|- ---
|- Start:    Line: 28:3 - Index 74]
|- End:      Line: 28:0 - Index 71]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [%>]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (108):
- Index:     1
- Line:      29
- Cursor:    74
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 030 ====================================
Current line: '<%-\ INCLUDE\ 'section-footer\.pst1'\ -Test1\ -Encoding\ UTF8\ %>'
Split line into 7 words
- There is content
- Lexeme is [ <%-]
-- Scanning current word '<%-' ----------------------------------------
| Counter - (108):
|- Index:     1
|- Line:      30
|- Cursor:    74
|- Column:    0
|- ---
|- Start:    Line: 28:3 - Index 74]
|- End:      Line: 28:0 - Index 71]
|- ---
|- Word index in this line: 0 of 7
|- Previous word:  []
|- Current word:   [<%-] <---
|- Next word:      [INCLUDE]
|- ---
|- State:     CLOSE
|- Content:   [
 
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Start tag (<%) regex (^<%(?<rightOf>\S+)?)
- Characters found after start tag
Characters found are a Prefix
Check condition when state is CLOSE
At C:\Users\taldrich\projects\github\stencil\source\stencil\public\Template\ConvertFrom-StencilTemplate.ps1:43
- State matches default
Content is not empty
- Set End position

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 74
Setting End Column => 0
Setting End Line => 30

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
 
'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '1'
    Index = 1
    Start = @{
        Column = 3
        Line = 28
        Index = 74
    }
    End = @{
        Column = 0
        Line = 30
        Index = 74
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
 
'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 3
        Line = 28
        Index = 74
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '1'
    End = @{
        Column = 0
        Line = 30
        Index = 74
    }
    Length = 3
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 74
After adding lexeme length : 78

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 0
After adding lexeme length : 4

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 78
Setting Start Column => 4
Setting Start Line => 30

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: CLOSE -> OPEN
- Store current word as prevWord
- Increment word count
Finished scanning word [<%-]
Word index in input - (109):
- Index:     1
- Line:      30
- Cursor:    78
- Column:    4
- ---
- Word index in this line: 1
- Previous:  [<%-]
- Word:      [<%-] <---
- Next:      [INCLUDE]
- ---
- State:     OPEN
- Content:   []
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- Content is empty
- Lexeme is [INCLUDE]
-- Scanning current word 'INCLUDE' ----------------------------------------
| Counter - (109):
|- Index:     1
|- Line:      30
|- Cursor:    78
|- Column:    4
|- ---
|- Start:    Line: 30:4 - Index 78]
|- End:      Line: 30:0 - Index 74]
|- ---
|- Word index in this line: 1 of 7
|- Previous word:  [<%-]
|- Current word:   [INCLUDE] <---
|- Next word:      ['section-footer.pst1']
|- ---
|- State:     OPEN
|- Content:   []
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is OPEN
STATE CHANGE: OPEN -> ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [INCLUDE]
Word index in input - (110):
- Index:     1
- Line:      30
- Cursor:    78
- Column:    4
- ---
- Word index in this line: 2
- Previous:  [INCLUDE]
- Word:      [INCLUDE] <---
- Next:      ['section-footer.pst1']
- ---
- State:     ELMT
- Content:   [INCLUDE]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ 'section-footer.pst1']
-- Scanning current word ''section-footer\.pst1'' ----------------------------------------
| Counter - (110):
|- Index:     1
|- Line:      30
|- Cursor:    78
|- Column:    4
|- ---
|- Start:    Line: 30:4 - Index 78]
|- End:      Line: 30:0 - Index 74]
|- ---
|- Word index in this line: 2 of 7
|- Previous word:  [INCLUDE]
|- Current word:   ['section-footer.pst1'] <---
|- Next word:      [-Test1]
|- ---
|- State:     ELMT
|- Content:   [INCLUDE]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word ['section-footer.pst1']
Word index in input - (111):
- Index:     1
- Line:      30
- Cursor:    78
- Column:    4
- ---
- Word index in this line: 3
- Previous:  ['section-footer.pst1']
- Word:      ['section-footer.pst1'] <---
- Next:      [-Test1]
- ---
- State:     ELMT
- Content:   [INCLUDE 'section-footer.pst1']
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ -Test1]
-- Scanning current word '-Test1' ----------------------------------------
| Counter - (111):
|- Index:     1
|- Line:      30
|- Cursor:    78
|- Column:    4
|- ---
|- Start:    Line: 30:4 - Index 78]
|- End:      Line: 30:0 - Index 74]
|- ---
|- Word index in this line: 3 of 7
|- Previous word:  ['section-footer.pst1']
|- Current word:   [-Test1] <---
|- Next word:      [-Encoding]
|- ---
|- State:     ELMT
|- Content:   [INCLUDE 'section-footer.pst1']
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [-Test1]
Word index in input - (112):
- Index:     1
- Line:      30
- Cursor:    78
- Column:    4
- ---
- Word index in this line: 4
- Previous:  [-Test1]
- Word:      [-Test1] <---
- Next:      [-Encoding]
- ---
- State:     ELMT
- Content:   [INCLUDE 'section-footer.pst1' -Test1]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ -Encoding]
-- Scanning current word '-Encoding' ----------------------------------------
| Counter - (112):
|- Index:     1
|- Line:      30
|- Cursor:    78
|- Column:    4
|- ---
|- Start:    Line: 30:4 - Index 78]
|- End:      Line: 30:0 - Index 74]
|- ---
|- Word index in this line: 4 of 7
|- Previous word:  [-Test1]
|- Current word:   [-Encoding] <---
|- Next word:      [UTF8]
|- ---
|- State:     ELMT
|- Content:   [INCLUDE 'section-footer.pst1' -Test1]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [-Encoding]
Word index in input - (113):
- Index:     1
- Line:      30
- Cursor:    78
- Column:    4
- ---
- Word index in this line: 5
- Previous:  [-Encoding]
- Word:      [-Encoding] <---
- Next:      [UTF8]
- ---
- State:     ELMT
- Content:   [INCLUDE 'section-footer.pst1' -Test1 -Encoding]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ UTF8]
-- Scanning current word 'UTF8' ----------------------------------------
| Counter - (113):
|- Index:     1
|- Line:      30
|- Cursor:    78
|- Column:    4
|- ---
|- Start:    Line: 30:4 - Index 78]
|- End:      Line: 30:0 - Index 74]
|- ---
|- Word index in this line: 5 of 7
|- Previous word:  [-Encoding]
|- Current word:   [UTF8] <---
|- Next word:      [%>]
|- ---
|- State:     ELMT
|- Content:   [INCLUDE 'section-footer.pst1' -Test1 -Encoding]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is ELMT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Increment word count
Finished scanning word [UTF8]
Word index in input - (114):
- Index:     1
- Line:      30
- Cursor:    78
- Column:    4
- ---
- Word index in this line: 6
- Previous:  [UTF8]
- Word:      [UTF8] <---
- Next:      [%>]
- ---
- State:     ELMT
- Content:   [INCLUDE 'section-footer.pst1' -Test1 -Encoding UTF8]
- Prefix:    [-]
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ %>]
-- Scanning current word '%>' ----------------------------------------
| Counter - (114):
|- Index:     1
|- Line:      30
|- Cursor:    78
|- Column:    4
|- ---
|- Start:    Line: 30:4 - Index 78]
|- End:      Line: 30:0 - Index 74]
|- ---
|- Word index in this line: 6 of 7
|- Previous word:  [UTF8]
|- Current word:   [%>] <---
|- Next word:      []
|- ---
|- State:     ELMT
|- Content:   [INCLUDE 'section-footer.pst1' -Test1 -Encoding UTF8]
|- Prefix:    [-]
|- Suffix:    []
-------------------------------------------------
| MATCH: End Tag
-- No characters found before end tag
Check condition when state is ELMT
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 78
Setting End Column => 4
Setting End Line => 30

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = 'INCLUDE ''section-footer.pst1'' -Test1 -Encoding UTF8'
    Prefix = '-'
    Type = 'elmt'
    RemainingWhiteSpace = ''
    Indent = '0'
    Index = 1
    Start = @{
        Column = 4
        Line = 30
        Index = 78
    }
    End = @{
        Column = 4
        Line = 30
        Index = 78
    }
    Suffix = ''
}

TokenInfo : @{
    Content = 'INCLUDE ''section-footer.pst1'' -Test1 -Encoding UTF8'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 4
        Line = 30
        Index = 78
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'ELMT'
    Prefix = '-'
    Suffix = ''
    Indent = '0'
    End = @{
        Column = 4
        Line = 30
        Index = 78
    }
    Length = 51
    PSTypeName = 'Stencil.TemplateToken.Elmt'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------
- Advance the cursor and column by 3

--------------------------------------------------------------------------------
-- Begin Update-Cursor
--------------------------------------------------------------------------------
Current cursor is : 78
After adding lexeme length : 81

--------------------------------------------------------------------------------
-- End Update-Cursor
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Update-Column
--------------------------------------------------------------------------------
Current column is : 4
After adding lexeme length : 7

--------------------------------------------------------------------------------
-- End Update-Column
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Set-StartPosition
--------------------------------------------------------------------------------
Setting Start Index => 81
Setting Start Column => 7
Setting Start Line => 30

--------------------------------------------------------------------------------
-- End Set-StartPosition
--------------------------------------------------------------------------------
STATE CHANGE: ELMT -> CLOSE
- Store current word as prevWord
- Increment word count
Finished scanning word [%>]
Word index in input - (115):
- Index:     1
- Line:      30
- Cursor:    81
- Column:    7
- ---
- Word index in this line: 7
- Previous:  [%>]
- Word:      [%>] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   []
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
=================================== Line 031 ====================================
Current line: ''
- line 31 is empty
Split line into 1 words
- There is content
- Lexeme is [ ]
-- Scanning current word '' ----------------------------------------
| Counter - (115):
|- Index:     1
|- Line:      31
|- Cursor:    81
|- Column:    0
|- ---
|- Start:    Line: 30:7 - Index 81]
|- End:      Line: 30:4 - Index 78]
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  [%>]
|- Current word:   [] <---
|- Next word:      []
|- ---
|- State:     CLOSE
|- Content:   [
]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
| MATCH: Null - add a space to content
- space after newline (start indent)
- Store current word as prevWord
- Increment word count
Finished scanning word []
Word index in input - (116):
- Index:     1
- Line:      31
- Cursor:    81
- Column:    0
- ---
- Word index in this line: 1
- Previous:  []
- Word:      [] <---
- Next:      []
- ---
- State:     CLOSE
- Content:   [
 ]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Line Feed
== End Line =====================================================================
increment linenumber
** Reached End of input **
- There is remaining content
Check condition when state is CLOSE
- default

--------------------------------------------------------------------------------
-- Begin Set-EndPosition
--------------------------------------------------------------------------------
Setting End Index => 81
Setting End Column => 0
Setting End Line => 32

--------------------------------------------------------------------------------
-- End Set-EndPosition
--------------------------------------------------------------------------------
**** Create Token ****

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    RemoveIndent = $false
    RemoveNewLine = $false
    Content = '
 
'
    Prefix = ''
    Type = 'text'
    RemainingWhiteSpace = ''
    Indent = '1'
    Index = 1
    Start = @{
        Column = 7
        Line = 30
        Index = 81
    }
    End = @{
        Column = 0
        Line = 32
        Index = 81
    }
    Suffix = ''
}

TokenInfo : @{
    Content = '
 
'
    RemoveIndent = $false
    RemoveNewLine = $false
    Start = @{
        Column = 7
        Line = 30
        Index = 81
    }
    RemainingWhiteSpace = ''
    Index = 1
    Type = 'TEXT'
    Prefix = ''
    Suffix = ''
    Indent = '1'
    End = @{
        Column = 0
        Line = 32
        Index = 81
    }
    Length = 3
    PSTypeName = 'Stencil.TemplateToken.Text'
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Convert-StringToToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End ConvertFrom-StencilTemplate
--------------------------------------------------------------------------------
