
--------------------------------------------------------------------------------
-- Begin Convert-StringToToken
--------------------------------------------------------------------------------
Template is 22 characters
Template contains 2 lines
Remove Carriage Return mark at index 20
Current line: 'This\ is\ a\ basic\ test'
Split line into 5 words
- Content is empty
- Lexeme is [This]
-- Scanning current word 'This' ----------------------------------------
| Counter - (0):
|- Index:     0
|- Line:      1
|- Cursor:    0
|- Column:    0
|- ---
|- Word index in this line: 0 of 1
|- Previous word:  []
|- Current word:   [This] <---
|- Next word:      [is]
|- ---
|- State:     TEXT
|- Content:   []
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Advance the cursor and column by 4
- Increment word count
Finished scanning word [This]
Word index in input - (1):
- Index:     0
- Line:      1
- Cursor:    4
- Column:    4
- ---
- Word index in this line: 1
- Previous:  [This]
- Word:      [This] <---
- Next:      [is]
- ---
- State:     TEXT
- Content:   [This]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ is]
-- Scanning current word 'is' ----------------------------------------
| Counter - (1):
|- Index:     0
|- Line:      1
|- Cursor:    4
|- Column:    4
|- ---
|- Word index in this line: 1 of 1
|- Previous word:  [This]
|- Current word:   [is] <---
|- Next word:      [a]
|- ---
|- State:     TEXT
|- Content:   [This]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Advance the cursor and column by 3
- Increment word count
Finished scanning word [is]
Word index in input - (2):
- Index:     0
- Line:      1
- Cursor:    7
- Column:    7
- ---
- Word index in this line: 2
- Previous:  [is]
- Word:      [is] <---
- Next:      [a]
- ---
- State:     TEXT
- Content:   [This is]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ a]
-- Scanning current word 'a' ----------------------------------------
| Counter - (2):
|- Index:     0
|- Line:      1
|- Cursor:    7
|- Column:    7
|- ---
|- Word index in this line: 2 of 1
|- Previous word:  [is]
|- Current word:   [a] <---
|- Next word:      [basic]
|- ---
|- State:     TEXT
|- Content:   [This is]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Advance the cursor and column by 2
- Increment word count
Finished scanning word [a]
Word index in input - (3):
- Index:     0
- Line:      1
- Cursor:    9
- Column:    9
- ---
- Word index in this line: 3
- Previous:  [a]
- Word:      [a] <---
- Next:      [basic]
- ---
- State:     TEXT
- Content:   [This is a]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ basic]
-- Scanning current word 'basic' ----------------------------------------
| Counter - (3):
|- Index:     0
|- Line:      1
|- Cursor:    9
|- Column:    9
|- ---
|- Word index in this line: 3 of 1
|- Previous word:  [a]
|- Current word:   [basic] <---
|- Next word:      [test]
|- ---
|- State:     TEXT
|- Content:   [This is a]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Advance the cursor and column by 6
- Increment word count
Finished scanning word [basic]
Word index in input - (4):
- Index:     0
- Line:      1
- Cursor:    15
- Column:    15
- ---
- Word index in this line: 4
- Previous:  [basic]
- Word:      [basic] <---
- Next:      [test]
- ---
- State:     TEXT
- Content:   [This is a basic]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- There is content
- Lexeme is [ test]
-- Scanning current word 'test' ----------------------------------------
| Counter - (4):
|- Index:     0
|- Line:      1
|- Cursor:    15
|- Column:    15
|- ---
|- Word index in this line: 4 of 1
|- Previous word:  [basic]
|- Current word:   [test] <---
|- Next word:      []
|- ---
|- State:     TEXT
|- Content:   [This is a basic]
|- Prefix:    []
|- Suffix:    []
-------------------------------------------------
MATCH: default
Check condition when state is TEXT
- Adding to content
- Reset Indent
- Store current word as prevWord
- Advance the cursor and column by 5
- Increment word count
Finished scanning word [test]
Word index in input - (5):
- Index:     0
- Line:      1
- Cursor:    20
- Column:    20
- ---
- Word index in this line: 5
- Previous:  [test]
- Word:      [test] <---
- Next:      []
- ---
- State:     TEXT
- Content:   [This is a basic test]
- Prefix:    []
- Suffix:    []
---------------------------------------- End ---

- Add a newline to content
- Add Carriage Return/Line Feed
== End Line =====================================================================
increment linenumber
No Carriage Return found
Current line: ''
- line 2 is empty
- Last line of input
- Add a newline to content
- Add Line Feed

--------------------------------------------------------------------------------
-- Begin New-TemplateToken
Received : @{
    LineNumber = 2
    RemoveNewLine = $false
    Type = 'Text'
    Column = 20
    Indent = '0'
    Suffix = ''
    Start = 0
    Prefix = ''
    RemoveIndent = $false
    Index = 0
    Content = 'This is a basic test

'
    RemainingWhiteSpace = ''
}

-- End New-TemplateToken
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Begin Reset-TokenOption
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- End Reset-TokenOption
--------------------------------------------------------------------------------
Reached End of input

--------------------------------------------------------------------------------
-- End Convert-StringToToken
--------------------------------------------------------------------------------
